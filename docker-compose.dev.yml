# Docker Compose for LOCAL DEVELOPMENT

services:
  postgres_db:
    container_name: retailflux_postgres_dev
    build:
      context: .
      dockerfile: ./infrastructure/docker/postgres.Dockerfile
    environment:
      - POSTGRES_DB=${POSTGRES_DB:-products_db_dev}
      - POSTGRES_USER=${POSTGRES_USER:-cristian}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-cristian}
      - POSTGRES_HOST_AUTH_METHOD=md5
    ports:
      - "5432:5432"
    volumes:
      - postgres_data_dev:/var/lib/postgresql/data
      - postgres_logs_dev:/var/log/postgresql
      - ./infrastructure/backups:/backups
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 40s
    networks:
      - retailflux_network

  api:
    container_name: retailflux_api_dev
    build:
      context: .
      dockerfile: ./infrastructure/docker/api.Dockerfile
    environment:
      - PYTHONPATH=/usr/src/app
      - APP_ENV=development
      - POSTGRES_HOST=postgres_db
      - POSTGRES_DB=${POSTGRES_DB:-products_db_dev}
      - POSTGRES_USER=${POSTGRES_USER:-cristian}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-cristian}
      - ALLOWED_HOSTS=localhost,127.0.0.1,0.0.0.0
      - CORS_ORIGINS=http://localhost:3000,http://127.0.0.1:3000
    volumes:
      - ./services/api:/usr/src/app/services/api
      - ./shared:/usr/src/app/shared
      - ./logs:/usr/src/app/logs
    ports:
      - "8000:8000"
    depends_on:
      postgres_db:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - retailflux_network

  scraper:
    container_name: retailflux_scraper_dev
    build:
      context: .
      dockerfile: ./infrastructure/docker/scraper.Dockerfile
    environment:
      - PYTHONPATH=/usr/src/app
      - APP_ENV=development
      - POSTGRES_HOST=postgres_db
      - POSTGRES_DB=${POSTGRES_DB:-products_db_dev}
      - POSTGRES_USER=${POSTGRES_USER:-cristian}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-cristian}
    volumes:
      - ./services/scraper:/usr/src/app/services/scraper
      - ./shared:/usr/src/app/shared
      - ./data:/usr/src/app/data
      - ./logs:/usr/src/app/logs
    depends_on:
      postgres_db:
        condition: service_healthy
      api:
        condition: service_healthy
    restart: on-failure
    networks:
      - retailflux_network

volumes:
  postgres_data_dev:
    driver: local
  postgres_logs_dev:
    driver: local

networks:
  retailflux_network:
    driver: bridge